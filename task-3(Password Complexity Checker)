import re

def assess_password_strength(password):
    # Initialize the strength score
    score = 0
    
    # Criteria for password strength
    length_criteria = len(password) >= 8
    uppercase_criteria = bool(re.search(r'[A-Z]', password))
    lowercase_criteria = bool(re.search(r'[a-z]', password))
    digit_criteria = bool(re.search(r'\d', password))
    special_char_criteria = bool(re.search(r'[\W_]', password))
    
    # Check each criterion and increment the score
    if length_criteria:
        score += 1
    if uppercase_criteria:
        score += 1
    if lowercase_criteria:
        score += 1
    if digit_criteria:
        score += 1
    if special_char_criteria:
        score += 1
    
    # Provide feedback based on the score
    if score == 5:
        feedback = "Very Strong"
    elif score == 4:
        feedback = "Strong"
    elif score == 3:
        feedback = "Moderate"
    elif score == 2:
        feedback = "Weak"
    else:
        feedback = "Very Weak"
    
    return feedback, score

# Example usage:
password = input("Enter a password to assess: ")
feedback, score = assess_password_strength(password)
print(f"Password Strength: {feedback} (Score: {score}/5)")
